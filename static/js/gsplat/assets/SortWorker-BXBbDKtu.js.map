{"version":3,"file":"SortWorker-BXBbDKtu.js","sources":["../src/wasm/sort.js","../src/renderers/webgl/utils/SortWorker.ts"],"sourcesContent":["async function createSortModule(moduleArg={}){var moduleRtn;var Module=moduleArg;var ENVIRONMENT_IS_WEB=false;var ENVIRONMENT_IS_WORKER=true;var arguments_=[];var thisProgram=\"./this.program\";var _scriptName=import.meta.url;var scriptDirectory=\"\";var readAsync,readBinary;if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){try{scriptDirectory=new URL(\".\",_scriptName).href}catch{}{if(ENVIRONMENT_IS_WORKER){readBinary=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=async url=>{var response=await fetch(url,{credentials:\"same-origin\"});if(response.ok){return response.arrayBuffer()}throw new Error(response.status+\" : \"+response.url)}}}else{}var out=console.log.bind(console);var err=console.error.bind(console);var wasmBinary;var ABORT=false;var readyPromiseResolve,readyPromiseReject;var wasmMemory;var HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;var HEAP64,HEAPU64;var runtimeInitialized=false;function updateMemoryViews(){var b=wasmMemory.buffer;HEAP8=new Int8Array(b);HEAP16=new Int16Array(b);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(b);HEAPU16=new Uint16Array(b);HEAP32=new Int32Array(b);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(b);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(b);HEAPF64=new Float64Array(b);HEAP64=new BigInt64Array(b);HEAPU64=new BigUint64Array(b)}function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(onPreRuns)}function initRuntime(){runtimeInitialized=true;wasmExports[\"c\"]()}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(onPostRuns)}var wasmBinaryFile;function findWasmBinary(){return base64Decode(\"\")}function getBinarySync(file){if(ArrayBuffer.isView(file)){return file}if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}throw'sync fetching of the wasm failed: you can preload it to Module[\"wasmBinary\"] manually, or emcc.py will do that for you when generating HTML (but not JS)'}function instantiateSync(file,info){var module;var binary=getBinarySync(file);module=new WebAssembly.Module(binary);var instance=new WebAssembly.Instance(module,info);return[instance,module]}function getWasmImports(){return{a:wasmImports}}function createWasm(){function receiveInstance(instance,module){wasmExports=instance.exports;wasmMemory=wasmExports[\"b\"];updateMemoryViews();assignWasmExports(wasmExports);return wasmExports}var info=getWasmImports();if(Module[\"instantiateWasm\"]){return new Promise((resolve,reject)=>{Module[\"instantiateWasm\"](info,(mod,inst)=>{resolve(receiveInstance(mod,inst))})})}wasmBinaryFile??=findWasmBinary();var result=instantiateSync(wasmBinaryFile,info);return receiveInstance(result[0])}class ExitStatus{name=\"ExitStatus\";constructor(status){this.message=`Program terminated with exit(${status})`;this.status=status}}var callRuntimeCallbacks=callbacks=>{while(callbacks.length>0){callbacks.shift()(Module)}};var onPostRuns=[];var addOnPostRun=cb=>onPostRuns.push(cb);var onPreRuns=[];var addOnPreRun=cb=>onPreRuns.push(cb);var base64Decode=b64=>{var b1,b2,i=0,j=0,bLength=b64.length;var output=new Uint8Array((bLength*3>>2)-(b64[bLength-2]==\"=\")-(b64[bLength-1]==\"=\"));for(;i<bLength;i+=4,j+=3){b1=base64ReverseLookup[b64.charCodeAt(i+1)];b2=base64ReverseLookup[b64.charCodeAt(i+2)];output[j]=base64ReverseLookup[b64.charCodeAt(i)]<<2|b1>>4;output[j+1]=b1<<4|b2>>2;output[j+2]=b2<<6|base64ReverseLookup[b64.charCodeAt(i+3)]}return output};var noExitRuntime=true;var getHeapMax=()=>2147483648;var alignMemory=(size,alignment)=>Math.ceil(size/alignment)*alignment;var growMemory=size=>{var oldHeapSize=wasmMemory.buffer.byteLength;var pages=(size-oldHeapSize+65535)/65536|0;try{wasmMemory.grow(pages);updateMemoryViews();return 1}catch(e){}};var _emscripten_resize_heap=requestedSize=>{var oldSize=HEAPU8.length;requestedSize>>>=0;var maxHeapSize=getHeapMax();if(requestedSize>maxHeapSize){return false}for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignMemory(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=growMemory(newSize);if(replacement){return true}}return false};for(var base64ReverseLookup=new Uint8Array(123),i=25;i>=0;--i){base64ReverseLookup[48+i]=52+i;base64ReverseLookup[65+i]=i;base64ReverseLookup[97+i]=26+i}base64ReverseLookup[43]=62;base64ReverseLookup[47]=63;{if(Module[\"noExitRuntime\"])noExitRuntime=Module[\"noExitRuntime\"];if(Module[\"print\"])out=Module[\"print\"];if(Module[\"printErr\"])err=Module[\"printErr\"];if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].shift()()}}}var _sort,_malloc,_free;function assignWasmExports(wasmExports){Module[\"_sort\"]=_sort=wasmExports[\"d\"];Module[\"_malloc\"]=_malloc=wasmExports[\"e\"];Module[\"_free\"]=_free=wasmExports[\"f\"]}var wasmImports={a:_emscripten_resize_heap};function run(){preRun();function doRun(){Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();readyPromiseResolve?.(Module);Module[\"onRuntimeInitialized\"]?.();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(()=>{setTimeout(()=>Module[\"setStatus\"](\"\"),1);doRun()},1)}else{doRun()}}var wasmExports;wasmExports=createWasm();run();if(runtimeInitialized){moduleRtn=Module}else{moduleRtn=new Promise((resolve,reject)=>{readyPromiseResolve=resolve;readyPromiseReject=reject})}\n;return moduleRtn}export default createSortModule;\n","import createSortModule from \"../../../wasm/sort.js\";\n\nlet wasmModule: any;\nlet sortData: {\n    positions: Float32Array;\n    transforms: Float32Array;\n    transformIndices: Uint32Array;\n    vertexCount: number;\n};\n\nlet viewProjPtr: number;\nlet transformsPtr: number;\nlet transformIndicesPtr: number;\nlet positionsPtr: number;\nlet depthBufferPtr: number;\nlet depthIndexPtr: number;\nlet startsPtr: number;\nlet countsPtr: number;\n\nlet allocatedVertexCount: number = 0;\nlet allocatedTransformCount: number = 0;\nlet viewProj: number[] = [];\n\nlet dirty = true;\nlet lock = false;\nlet allocationPending = false;\nlet sorting = false;\n\nasync function initWasm() {\n    if (!wasmModule) {\n        wasmModule = await createSortModule();\n\n        if (!wasmModule || !wasmModule.HEAPF32 || !wasmModule._sort) {\n            throw new Error(\"WASM module failed to initialize properly\");\n        }\n    }\n}\n\nconst allocateBuffers = async () => {\n    if (lock) {\n        allocationPending = true;\n        return;\n    }\n    lock = true;\n    allocationPending = false;\n\n    if (!wasmModule) {\n        await initWasm();\n    }\n\n    const targetAllocatedVertexCount = Math.pow(2, Math.ceil(Math.log2(sortData.vertexCount)));\n    if (allocatedVertexCount < targetAllocatedVertexCount) {\n        if (allocatedVertexCount > 0) {\n            wasmModule._free(viewProjPtr);\n            wasmModule._free(transformIndicesPtr);\n            wasmModule._free(positionsPtr);\n            wasmModule._free(depthBufferPtr);\n            wasmModule._free(depthIndexPtr);\n            wasmModule._free(startsPtr);\n            wasmModule._free(countsPtr);\n        }\n\n        allocatedVertexCount = targetAllocatedVertexCount;\n\n        viewProjPtr = wasmModule._malloc(16 * 4);\n        transformIndicesPtr = wasmModule._malloc(allocatedVertexCount * 4);\n        positionsPtr = wasmModule._malloc(3 * allocatedVertexCount * 4);\n        depthBufferPtr = wasmModule._malloc(allocatedVertexCount * 4);\n        depthIndexPtr = wasmModule._malloc(allocatedVertexCount * 4);\n        startsPtr = wasmModule._malloc(allocatedVertexCount * 4);\n        countsPtr = wasmModule._malloc(allocatedVertexCount * 4);\n    }\n\n    if (allocatedTransformCount < sortData.transforms.length) {\n        if (allocatedTransformCount > 0) {\n            wasmModule._free(transformsPtr);\n        }\n\n        allocatedTransformCount = sortData.transforms.length;\n        transformsPtr = wasmModule._malloc(allocatedTransformCount * 4);\n    }\n\n    lock = false;\n    if (allocationPending) {\n        allocationPending = false;\n        await allocateBuffers();\n    }\n};\n\nconst runSort = () => {\n    if (lock || allocationPending || !wasmModule || !sortData) {\n        return;\n    }\n    lock = true;\n\n    try {\n        // Validate buffer sizes before setting\n        const heapF32 = wasmModule.HEAPF32;\n        const heapU32 = wasmModule.HEAPU32;\n\n        if (positionsPtr / 4 + sortData.positions.length > heapF32.length) {\n            throw new Error(\"Positions buffer overflow\");\n        }\n        if (transformsPtr / 4 + sortData.transforms.length > heapF32.length) {\n            throw new Error(\"Transforms buffer overflow\");\n        }\n        if (transformIndicesPtr / 4 + sortData.transformIndices.length > heapU32.length) {\n            throw new Error(\"Transform indices buffer overflow\");\n        }\n\n        heapF32.set(sortData.positions, positionsPtr / 4);\n        heapF32.set(sortData.transforms, transformsPtr / 4);\n        heapU32.set(sortData.transformIndices, transformIndicesPtr / 4);\n        heapF32.set(new Float32Array(viewProj), viewProjPtr / 4);\n\n        wasmModule._sort(\n            viewProjPtr,\n            transformsPtr,\n            transformIndicesPtr,\n            sortData.vertexCount,\n            positionsPtr,\n            depthBufferPtr,\n            depthIndexPtr,\n            startsPtr,\n            countsPtr,\n        );\n\n        // Validate depth index buffer size\n        if (depthIndexPtr + sortData.vertexCount * 4 > heapU32.buffer.byteLength) {\n            throw new Error(\"Depth index buffer overflow\");\n        }\n\n        const depthIndex = new Uint32Array(heapU32.buffer, depthIndexPtr, sortData.vertexCount);\n        const detachedDepthIndex = new Uint32Array(depthIndex.slice().buffer);\n\n        self.postMessage({ depthIndex: detachedDepthIndex }, [detachedDepthIndex.buffer]);\n    } catch {\n        self.postMessage({ depthIndex: new Uint32Array(0) }, []);\n    }\n\n    lock = false;\n    dirty = false;\n};\n\nconst throttledSort = () => {\n    if (!sorting) {\n        sorting = true;\n        if (dirty) runSort();\n\n        setTimeout(() => {\n            sorting = false;\n            throttledSort();\n        });\n    }\n};\n\nself.onmessage = (e) => {\n    if (e.data.sortData) {\n        if (!sortData) {\n            sortData = {\n                positions: new Float32Array(e.data.sortData.positions),\n                transforms: new Float32Array(e.data.sortData.transforms),\n                transformIndices: new Uint32Array(e.data.sortData.transformIndices),\n                vertexCount: e.data.sortData.vertexCount,\n            };\n        } else {\n            sortData.positions.set(e.data.sortData.positions);\n            sortData.transforms.set(e.data.sortData.transforms);\n            sortData.transformIndices.set(e.data.sortData.transformIndices);\n            sortData.vertexCount = e.data.sortData.vertexCount;\n        }\n\n        dirty = true;\n        allocateBuffers();\n    }\n    if (e.data.viewProj) {\n        if ((e.data.viewProj as number[]).every((item) => viewProj.includes(item)) === false) {\n            viewProj = e.data.viewProj;\n            dirty = true;\n        }\n\n        throttledSort();\n    }\n};\n"],"names":["createSortModule","moduleArg","moduleRtn","Module","_scriptName","scriptDirectory","readBinary","url","xhr","wasmBinary","readyPromiseResolve","wasmMemory","HEAPU8","runtimeInitialized","updateMemoryViews","b","preRun","addOnPreRun","callRuntimeCallbacks","onPreRuns","initRuntime","wasmExports","postRun","addOnPostRun","onPostRuns","wasmBinaryFile","findWasmBinary","base64Decode","getBinarySync","file","instantiateSync","info","module","binary","instance","getWasmImports","wasmImports","createWasm","receiveInstance","assignWasmExports","resolve","reject","mod","inst","result","callbacks","cb","b64","b1","b2","i","j","bLength","output","base64ReverseLookup","getHeapMax","alignMemory","size","alignment","growMemory","oldHeapSize","pages","_emscripten_resize_heap","requestedSize","oldSize","maxHeapSize","cutDown","overGrownHeapSize","newSize","replacement","run","doRun","wasmModule","sortData","viewProjPtr","transformsPtr","transformIndicesPtr","positionsPtr","depthBufferPtr","depthIndexPtr","startsPtr","countsPtr","allocatedVertexCount","allocatedTransformCount","viewProj","dirty","lock","allocationPending","sorting","initWasm","allocateBuffers","targetAllocatedVertexCount","runSort","heapF32","heapU32","depthIndex","detachedDepthIndex","throttledSort","e","item"],"mappings":"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"}