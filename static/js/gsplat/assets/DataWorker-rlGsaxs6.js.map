{"version":3,"file":"DataWorker-rlGsaxs6.js","sources":["../src/wasm/data.js","../src/renderers/webgl/utils/DataWorker.ts"],"sourcesContent":["async function createDataModule(moduleArg={}){var moduleRtn;var Module=moduleArg;var ENVIRONMENT_IS_WEB=false;var ENVIRONMENT_IS_WORKER=true;var arguments_=[];var thisProgram=\"./this.program\";var _scriptName=import.meta.url;var scriptDirectory=\"\";var readAsync,readBinary;if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){try{scriptDirectory=new URL(\".\",_scriptName).href}catch{}{if(ENVIRONMENT_IS_WORKER){readBinary=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=async url=>{var response=await fetch(url,{credentials:\"same-origin\"});if(response.ok){return response.arrayBuffer()}throw new Error(response.status+\" : \"+response.url)}}}else{}var out=console.log.bind(console);var err=console.error.bind(console);var wasmBinary;var ABORT=false;var readyPromiseResolve,readyPromiseReject;var wasmMemory;var HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;var HEAP64,HEAPU64;var runtimeInitialized=false;function updateMemoryViews(){var b=wasmMemory.buffer;HEAP8=new Int8Array(b);HEAP16=new Int16Array(b);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(b);HEAPU16=new Uint16Array(b);HEAP32=new Int32Array(b);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(b);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(b);HEAPF64=new Float64Array(b);HEAP64=new BigInt64Array(b);HEAPU64=new BigUint64Array(b)}function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(onPreRuns)}function initRuntime(){runtimeInitialized=true;wasmExports[\"c\"]()}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(onPostRuns)}var wasmBinaryFile;function findWasmBinary(){return base64Decode(\"\")}function getBinarySync(file){if(ArrayBuffer.isView(file)){return file}if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}throw'sync fetching of the wasm failed: you can preload it to Module[\"wasmBinary\"] manually, or emcc.py will do that for you when generating HTML (but not JS)'}function instantiateSync(file,info){var module;var binary=getBinarySync(file);module=new WebAssembly.Module(binary);var instance=new WebAssembly.Instance(module,info);return[instance,module]}function getWasmImports(){return{a:wasmImports}}function createWasm(){function receiveInstance(instance,module){wasmExports=instance.exports;wasmMemory=wasmExports[\"b\"];updateMemoryViews();assignWasmExports(wasmExports);return wasmExports}var info=getWasmImports();if(Module[\"instantiateWasm\"]){return new Promise((resolve,reject)=>{Module[\"instantiateWasm\"](info,(mod,inst)=>{resolve(receiveInstance(mod,inst))})})}wasmBinaryFile??=findWasmBinary();var result=instantiateSync(wasmBinaryFile,info);return receiveInstance(result[0])}class ExitStatus{name=\"ExitStatus\";constructor(status){this.message=`Program terminated with exit(${status})`;this.status=status}}var callRuntimeCallbacks=callbacks=>{while(callbacks.length>0){callbacks.shift()(Module)}};var onPostRuns=[];var addOnPostRun=cb=>onPostRuns.push(cb);var onPreRuns=[];var addOnPreRun=cb=>onPreRuns.push(cb);var base64Decode=b64=>{var b1,b2,i=0,j=0,bLength=b64.length;var output=new Uint8Array((bLength*3>>2)-(b64[bLength-2]==\"=\")-(b64[bLength-1]==\"=\"));for(;i<bLength;i+=4,j+=3){b1=base64ReverseLookup[b64.charCodeAt(i+1)];b2=base64ReverseLookup[b64.charCodeAt(i+2)];output[j]=base64ReverseLookup[b64.charCodeAt(i)]<<2|b1>>4;output[j+1]=b1<<4|b2>>2;output[j+2]=b2<<6|base64ReverseLookup[b64.charCodeAt(i+3)]}return output};var noExitRuntime=true;var getHeapMax=()=>2147483648;var alignMemory=(size,alignment)=>Math.ceil(size/alignment)*alignment;var growMemory=size=>{var oldHeapSize=wasmMemory.buffer.byteLength;var pages=(size-oldHeapSize+65535)/65536|0;try{wasmMemory.grow(pages);updateMemoryViews();return 1}catch(e){}};var _emscripten_resize_heap=requestedSize=>{var oldSize=HEAPU8.length;requestedSize>>>=0;var maxHeapSize=getHeapMax();if(requestedSize>maxHeapSize){return false}for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignMemory(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=growMemory(newSize);if(replacement){return true}}return false};for(var base64ReverseLookup=new Uint8Array(123),i=25;i>=0;--i){base64ReverseLookup[48+i]=52+i;base64ReverseLookup[65+i]=i;base64ReverseLookup[97+i]=26+i}base64ReverseLookup[43]=62;base64ReverseLookup[47]=63;{if(Module[\"noExitRuntime\"])noExitRuntime=Module[\"noExitRuntime\"];if(Module[\"print\"])out=Module[\"print\"];if(Module[\"printErr\"])err=Module[\"printErr\"];if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].shift()()}}}var _pack,_malloc,_free;function assignWasmExports(wasmExports){Module[\"_pack\"]=_pack=wasmExports[\"d\"];Module[\"_malloc\"]=_malloc=wasmExports[\"e\"];Module[\"_free\"]=_free=wasmExports[\"f\"]}var wasmImports={a:_emscripten_resize_heap};function run(){preRun();function doRun(){Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();readyPromiseResolve?.(Module);Module[\"onRuntimeInitialized\"]?.();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(()=>{setTimeout(()=>Module[\"setStatus\"](\"\"),1);doRun()},1)}else{doRun()}}var wasmExports;wasmExports=createWasm();run();if(runtimeInitialized){moduleRtn=Module}else{moduleRtn=new Promise((resolve,reject)=>{readyPromiseResolve=resolve;readyPromiseReject=reject})}\n;return moduleRtn}export default createDataModule;\n","import createDataModule from \"../../../wasm/data.js\";\n\nlet wasmModule: any;\n\nasync function initWasm() {\n    wasmModule = await createDataModule();\n\n    if (!wasmModule || !wasmModule.HEAPF32 || !wasmModule._pack) {\n        throw new Error(\"WASM module failed to initialize properly\");\n    }\n}\n\nclass Splat {\n    offset: number = 0;\n    position: Float32Array = new Float32Array(3);\n    rotation: Float32Array = new Float32Array(4);\n    scale: Float32Array = new Float32Array(3);\n    selected: boolean = false;\n    vertexCount: number = 0;\n    positions: Float32Array = new Float32Array(0);\n    rotations: Float32Array = new Float32Array(0);\n    scales: Float32Array = new Float32Array(0);\n    colors: Uint8Array = new Uint8Array(0);\n    selection: Uint8Array = new Uint8Array(0);\n}\n\nlet allocatedVertexCount: number = 0;\nconst updateQueue = new Array<Splat>();\nlet running = false;\nlet loading = false;\n\nlet positionsPtr: number;\nlet rotationsPtr: number;\nlet scalesPtr: number;\nlet colorsPtr: number;\nlet selectionPtr: number;\nlet dataPtr: number;\nlet worldPositionsPtr: number;\nlet worldRotationsPtr: number;\nlet worldScalesPtr: number;\n\nconst pack = async (splat: Splat) => {\n    while (loading) {\n        await new Promise((resolve) => setTimeout(resolve, 0));\n    }\n\n    if (!wasmModule) {\n        loading = true;\n        await initWasm();\n        loading = false;\n    }\n\n    const targetAllocatedVertexCount = Math.pow(2, Math.ceil(Math.log2(splat.vertexCount)));\n    if (targetAllocatedVertexCount > allocatedVertexCount) {\n        if (allocatedVertexCount > 0) {\n            wasmModule._free(positionsPtr);\n            wasmModule._free(rotationsPtr);\n            wasmModule._free(scalesPtr);\n            wasmModule._free(colorsPtr);\n            wasmModule._free(selectionPtr);\n            wasmModule._free(dataPtr);\n            wasmModule._free(worldPositionsPtr);\n            wasmModule._free(worldRotationsPtr);\n            wasmModule._free(worldScalesPtr);\n        }\n\n        allocatedVertexCount = targetAllocatedVertexCount;\n\n        positionsPtr = wasmModule._malloc(3 * allocatedVertexCount * 4);\n        rotationsPtr = wasmModule._malloc(4 * allocatedVertexCount * 4);\n        scalesPtr = wasmModule._malloc(3 * allocatedVertexCount * 4);\n        colorsPtr = wasmModule._malloc(4 * allocatedVertexCount);\n        selectionPtr = wasmModule._malloc(allocatedVertexCount);\n        dataPtr = wasmModule._malloc(8 * allocatedVertexCount * 4);\n        worldPositionsPtr = wasmModule._malloc(3 * allocatedVertexCount * 4);\n        worldRotationsPtr = wasmModule._malloc(4 * allocatedVertexCount * 4);\n        worldScalesPtr = wasmModule._malloc(3 * allocatedVertexCount * 4);\n    }\n\n    wasmModule.HEAPF32.set(splat.positions, positionsPtr / 4);\n    wasmModule.HEAPF32.set(splat.rotations, rotationsPtr / 4);\n    wasmModule.HEAPF32.set(splat.scales, scalesPtr / 4);\n    wasmModule.HEAPU8.set(splat.colors, colorsPtr);\n    wasmModule.HEAPU8.set(splat.selection, selectionPtr);\n\n    wasmModule._pack(\n        splat.selected,\n        splat.vertexCount,\n        positionsPtr,\n        rotationsPtr,\n        scalesPtr,\n        colorsPtr,\n        selectionPtr,\n        dataPtr,\n        worldPositionsPtr,\n        worldRotationsPtr,\n        worldScalesPtr,\n    );\n\n    const outData = new Uint32Array(wasmModule.HEAPU32.buffer, dataPtr, splat.vertexCount * 8);\n    const detachedData = new Uint32Array(outData.slice().buffer);\n\n    const worldPositions = new Float32Array(wasmModule.HEAPF32.buffer, worldPositionsPtr, splat.vertexCount * 3);\n    const detachedWorldPositions = new Float32Array(worldPositions.slice().buffer);\n\n    const worldRotations = new Float32Array(wasmModule.HEAPF32.buffer, worldRotationsPtr, splat.vertexCount * 4);\n    const detachedWorldRotations = new Float32Array(worldRotations.slice().buffer);\n\n    const worldScales = new Float32Array(wasmModule.HEAPF32.buffer, worldScalesPtr, splat.vertexCount * 3);\n    const detachedWorldScales = new Float32Array(worldScales.slice().buffer);\n\n    const response = {\n        data: detachedData,\n        worldPositions: detachedWorldPositions,\n        worldRotations: detachedWorldRotations,\n        worldScales: detachedWorldScales,\n        offset: splat.offset,\n        vertexCount: splat.vertexCount,\n        positions: splat.positions.buffer,\n        rotations: splat.rotations.buffer,\n        scales: splat.scales.buffer,\n        colors: splat.colors.buffer,\n        selection: splat.selection.buffer,\n    };\n\n    self.postMessage({ response: response }, [\n        response.data.buffer,\n        response.worldPositions.buffer,\n        response.worldRotations.buffer,\n        response.worldScales.buffer,\n        response.positions,\n        response.rotations,\n        response.scales,\n        response.colors,\n        response.selection,\n    ]);\n\n    running = false;\n};\n\nconst packThrottled = () => {\n    if (updateQueue.length === 0) return;\n    if (!running) {\n        running = true;\n        const splat = updateQueue.shift() as Splat;\n        pack(splat);\n        setTimeout(() => {\n            running = false;\n            packThrottled();\n        }, 0);\n    }\n};\n\nself.onmessage = (e) => {\n    if (e.data.splat) {\n        const splat = e.data.splat as Splat;\n        for (const [index, existing] of updateQueue.entries()) {\n            if (existing.offset === splat.offset) {\n                updateQueue[index] = splat;\n                return;\n            }\n        }\n        updateQueue.push(splat);\n        packThrottled();\n    }\n};\n"],"names":["createDataModule","moduleArg","moduleRtn","Module","_scriptName","scriptDirectory","readBinary","url","xhr","wasmBinary","readyPromiseResolve","wasmMemory","HEAPU8","runtimeInitialized","updateMemoryViews","b","preRun","addOnPreRun","callRuntimeCallbacks","onPreRuns","initRuntime","wasmExports","postRun","addOnPostRun","onPostRuns","wasmBinaryFile","findWasmBinary","base64Decode","getBinarySync","file","instantiateSync","info","module","binary","instance","getWasmImports","wasmImports","createWasm","receiveInstance","assignWasmExports","resolve","reject","mod","inst","result","callbacks","cb","b64","b1","b2","i","j","bLength","output","base64ReverseLookup","getHeapMax","alignMemory","size","alignment","growMemory","oldHeapSize","pages","_emscripten_resize_heap","requestedSize","oldSize","maxHeapSize","cutDown","overGrownHeapSize","newSize","replacement","run","doRun","wasmModule","initWasm","allocatedVertexCount","updateQueue","running","loading","positionsPtr","rotationsPtr","scalesPtr","colorsPtr","selectionPtr","dataPtr","worldPositionsPtr","worldRotationsPtr","worldScalesPtr","pack","splat","targetAllocatedVertexCount","outData","detachedData","worldPositions","detachedWorldPositions","worldRotations","detachedWorldRotations","worldScales","detachedWorldScales","response","packThrottled","e","index","existing"],"mappings":"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"}